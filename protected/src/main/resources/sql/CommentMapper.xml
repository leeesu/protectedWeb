<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CommentMapper">


	<resultMap id="commentSelectMap" type="comment">
		<result property="commentNo" 		column="comment_no"			jdbcType="NUMERIC" />
		<result property="postNo" 			column="post_no" 			jdbcType="NUMERIC" />
		<result property="boardCode" 		column="board_code"			jdbcType="VARCHAR" />
		<result property="id" 				column="id" 				jdbcType="VARCHAR" />
		<result property="commentContent" 	column="COMMENT_CONTENT"	jdbcType="VARCHAR" />
		<result property="regDate" 			column="reg_date" 			jdbcType="DATE" />
		<result property="likeCount" 		column="like_count"			jdbcType="NUMERIC" />
		<result property="nickName" 		column="nickname"			jdbcType="VARCHAR" />
		<result property="profile" 			column="profile"			jdbcType="VARCHAR" />		
	</resultMap>

	<!-- SQL : INSERT -->
	<insert id="addComment" parameterType="comment">
		<selectKey keyProperty="commentNo" resultType="int" order="BEFORE">
			SELECT seq_COMMENTS_COMMENT_NO.nextval FROM DUAL
		</selectKey>
		INSERT INTO comments( comment_no, post_no, board_code, id, COMMENT_CONTENT, reg_date, like_count, nickName, profile)
		VALUES (#{commentNo}, #{postNo}, #{boardCode}, #{id}, #{commentContent}, SYSDATE, #{likeCount}, #{nickName}, #{profile:VARCHAR})
	</insert>

	<select id="getComment" parameterType="map"
		resultMap="commentSelectMap">
		SELECT comment_no, post_no, board_code, id, comment_content,
		reg_date, like_count, nickName, profile
		FROM comments
		WHERE comment_no = #{commentNo} AND board_code = #{boardCode}
	</select>

	<update id="updateComment" parameterType="comment">
		UPDATE
		comments
		SET comment_content = #{commentContent}
		WHERE comment_no = #{commentNo} AND board_code = #{boardCode}
	</update>

	<update id="updateLikeCnt" parameterType="map">
		UPDATE comments
		<if test="check.equals('plus')">
			SET like_count = like_count + 1
		</if>
		<if test="check.equals('minus')">
			SET like_count = like_count - 1
		</if>
		WHERE comment_no = #{commentNo} AND board_code = #{boardCode}
	</update>

	<delete id="delComment" parameterType="map">
		UPDATE comments
		SET status_code = '0'
		WHERE comment_no = #{commentNo} AND board_code = #{boardCode}
	</delete>

	<select id="listComment" parameterType="map"
		resultMap="commentSelectMap">
		SELECT *
		FROM (  SELECT inner_table.* , ROWNUM AS row_seq
				FROM (  SELECT comment_no, post_no, board_code, id, comment_content, reg_date, like_count, nickName, profile
						FROM comments
						WHERE post_no = #{postNo} AND board_code = #{boardCode} AND status_code != '0'
						ORDER BY  LIKE_COUNT DESC, reg_date DESC ) inner_table
				WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}
	</select>

	<select id="listCommentMoreView" parameterType="map" resultMap="commentSelectMap">		
		SELECT *
		FROM ( SELECT inner_table.* , ROWNUM AS row_seq
				FROM ( SELECT comment_no, post_no, board_code, id, comment_content, reg_date, like_count, nickName, profile
						FROM comments
						WHERE post_no = #{postNo} AND board_code = #{boardCode} AND status_code != '0'
						ORDER BY reg_date DESC ) inner_table
				WHERE ROWNUM &lt;= #{commentEndRowNum} )
		WHERE row_seq BETWEEN 1 AND #{commentEndRowNum}	
	</select>
	
	<select id="getTotalCount" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM( SELECT comment_no, post_no, board_code, id, comment_content, reg_date, like_count, nickName, profile
				FROM comments
				WHERE post_no = #{postNo} AND board_code = #{boardCode} AND status_code != '0' ) countTable
	</select>

</mapper>