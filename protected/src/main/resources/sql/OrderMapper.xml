<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="OrderMapper">
	<resultMap type="order" id="orderSelectMap">
		<result property="orderNo" 			column="order_no" 			jdbcType="NUMERIC"/>
		<result property="prodNo" 			column="prod_no" 			jdbcType="NUMERIC" />
		<result property="id" 				column="id" 				jdbcType="VARCHAR"/>
		<result property="phone" 			column="phone" 				jdbcType="VARCHAR" />
		<result property="receiverAddr" 	column="receiver_addr" 		jdbcType="VARCHAR" />
		<result property="receiverName" 	column="receiver_name" 		jdbcType="VARCHAR" />
		<result property="receiverPhone" 	column="receiver_phone"	 	jdbcType="VARCHAR" />
		<result property="orderRequest" 	column="order_request" 		jdbcType="VARCHAR" />
		<result property="paymentCode" 		column="payment_code" 		jdbcType="NUMERIC" />
		<result property="orderQuantity" 	column="order_quantity" 	jdbcType="NUMERIC"/>
		<result property="totalPrice" 		column="total_price" 		jdbcType="NUMERIC" />
		<result property="orderCode" 		column ="order_code" 		jdbcType="NUMERIC"/>
		<!-- NULL가능  0-->
		<result property="deliveryCode" 	column="delivery_code" 		jdbcType="NUMERIC"/>
		<!-- NULL가능이지만 외래키■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■-->
		<result property="couponNo"			column="coupon_no"			jdbcType="NUMERIC"/>
		<result property="orderDate"		column="order_date" 		jdbcType="DATE"/>
		<!-- HAS A관계 JOIN ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■-->
	<association property="orderProd"  javaType="org.protectedog.service.domain.Product">
		<id property="prodNo" column="prod_no" jdbcType="NUMERIC"/>
		<result property="prodNo" 			column="prod_no" 		jdbcType="NUMERIC" />
		<result property="prodName" 		column="prod_name" 		jdbcType="VARCHAR" />
		<result property="price" 			column="price" 			jdbcType="NUMERIC" />
		<result property="manuDate" 		column="manu_date" 		jdbcType="DATE" />	
		<result property="regDate" 			column="reg_date"		jdbcType="DATE" />
		<result property="country"			column="country" 		jdbcType="VARCHAR" />
		<result property="quantity" 		column="quantity" 		jdbcType="NUMERIC" />
		<result property="prodDetail" 		column="prod_detail" 	jdbcType="VARCHAR" />
		<result property="company" 			column="company" 		jdbcType="VARCHAR" />
		<result property="discountPrice" 	column="discount_price" jdbcType="NUMERIC"/>
		<result property="prodCode" 		column="prod_code" 		jdbcType="NUMERIC"/>
		<result property="mainFile"			column="main_file"		jdbcType="VARCHAR"/>
		</association>
 </resultMap>




<insert id="addOrder" parameterType="order">
<selectKey keyProperty="orderNo" resultType="int" order="BEFORE">
		SELECT SEQ_ORDERS_ORDER_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT 
		INTO ORDERS 
		(ORDER_NO, PROD_NO, PHONE, ID, RECEIVER_ADDR, RECEIVER_NAME, 
		RECEIVER_PHONE, ORDER_REQUEST, PAYMENT_CODE, ORDER_DATE, 
		ORDER_QUANTITY, ORDER_CODE, TOTAL_PRICE, COUPON_NO) 
		VALUES (#{orderNo:NUMERIC}, #{prodNo:NUMERIC}, #{phone:VARCHAR}, #{id:VARCHAR}, 
		#{receiverAddr:VARCHAR}, #{receiverName:VARCHAR},#{receiverPhone:VARCHAR}, #{orderRequest:VARCHAR}, 
		#{paymentCode:NUMERIC}, SYSDATE, #{orderQuantity:NUMERIC}, #{orderCode:NUMERIC}, #{totalPrice:NUMERIC}, 
		#{couponNo:NUMERIC})
	</insert>

<select id="getOrder" parameterType="string" resultMap="orderSelectMap">
		SELECT o.order_no, p.prod_no, p.prod_name, o.order_code, o.total_price, o.id, o.phone, o.order_date, o.receiver_name,
		o.receiver_phone, o.receiver_addr, o.order_request, o.payment_code, p.discount_price, o.order_quantity

		FROM orders o, product p
		WHERE o.order_no = #{orderNo}
		AND o.prod_no = p.prod_no
	</select>


	<update	id="updateOrderCode" parameterType="order">
	  	UPDATE orders
	  	<set>
	  		order_code = #{orderCode}
	  	</set>
	  	WHERE order_no = #{orderNo}
	</update>
	
	<update id="updateOrder" parameterType="order">
	UPDATE orders
	SET
	receiver_name = #{receiverName}, 
	receiver_phone = #{receiverPhone}, 
	receiver_addr = #{receiverAddr},
	order_request = #{orderRequest}
	WHERE order_no = #{orderNo}
	</update>
	
	<delete id="delOrder" parameterType="order">
	DELETE FROM orders
	WHERE tran_no = #{tranNo}
	</delete>

	 <select  id="listOrder"  parameterType="map"	resultMap="orderSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  		FROM (	SELECT o.order_no, o.prod_no, o.payment_code, o.order_date, o.total_price, o.order_code ,o.id,
	  		p.prod_name, p.prod_detail, p.main_file, o.order_quantity
			from orders o, product p
					WHERE o.id =#{id}		
					AND o.prod_no=p.prod_no		
					ORDER BY order_no DESC) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}
	 </select>
	 
	 	 <select  id="listAdminOrder"  parameterType="map"	resultMap="orderSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  		FROM (	SELECT o.order_no, o.prod_no, o.payment_code, o.order_date, o.total_price, o.order_code ,o.id,
	  		p.prod_name, p.prod_detail, p.main_file, o.order_quantity
			from orders o, product p
					WHERE o.prod_no=p.prod_no		
					ORDER BY order_no DESC) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}
	 </select>
	 
	  <select  id="listCancleOrder"  parameterType="map"	resultMap="orderSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  		FROM (	SELECT o.order_no, o.prod_no, o.payment_code, o.order_date, o.total_price, o.order_code ,o.id,
	  		p.prod_name, p.prod_detail, p.main_file, o.order_quantity
			from orders o, product p
					WHERE o.prod_no=p.prod_no	
					AND o.order_code='4'	
					ORDER BY order_no DESC) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}
	 </select>
	 


	<select id="getTotalCount" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM(SELECT * FROM orders
		<where>
		<if test ="id != 'admin'">
		id =#{id}
		</if>
		</where>
		) countTable
	</select>
		
	
		</mapper>