<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="FundingMapper">

	<resultMap id="fundingSelectMap" type="funding">

		<result property="postNo" column="POST_NO" jdbcType="NUMERIC" />
		<result property="id" column="ID" jdbcType="VARCHAR" />
		<result property="nickname" column="NICKNAME" jdbcType="VARCHAR" />
		<result property="statusCode" column="STATUS_CODE" jdbcType="CHAR" />
		<result property="phone" column="PHONE" jdbcType="VARCHAR" />
		<result property="postTitle" column="POST_TITLE" jdbcType="VARCHAR" />		
		<result property="postContent" column="POST_CONTENT" jdbcType="CLOB" javaType="string"/>
		<!-- default 0 -->
		<result property="voteViewCount" column="VOTE_VIEW_COUNT" jdbcType="NUMERIC" />
		<!-- default 0 -->
		<result property="voterCount" column="VOTER_COUNT" jdbcType="NUMERIC" />		
		<result property="voteStartDate" column="VOTE_START_DATE" jdbcType="DATE" />
		<result property="voteEndDate" column="VOTE_END_DATE" jdbcType="DATE" />
		<result property="fundTargetPay" column="FUND_TARGET_PAY" jdbcType="NUMERIC" />
		<result property="voteTargetCount" column="VOTE_TARGET_COUNT" jdbcType="NUMERIC" />
		<result property="fundTargetDay" column="FUND_TARGET_DAY" jdbcType="NUMERIC" />
		<!-- default 0 -->
		<result property="fundViewCount" column="FUND_VIEW_COUNT" jdbcType="NUMERIC" />
		<!-- default 0 -->
		<result property="sponsorCount" column="SPONSOR_COUNT" jdbcType="NUMERIC" />
		<!-- default 0 -->		
		<result property="fundPay" column="FUND_PAY" jdbcType="NUMERIC" />
		<result property="fundStartDate" column="FUND_START_DATE" jdbcType="DATE" />
		<result property="fundEndDate" column="FUND_END_DATE" jdbcType="DATE" />
		<result property="reviewTitle" column="REVIEW_TITLE" jdbcType="VARCHAR" />
		<result property="reviewContent" column="REVIEW_CONTENT" jdbcType="VARCHAR" />
		<result property="reviewRegDate" column="REVIEW_REG_DATE" jdbcType="DATE" />	
		<result property="mainFile" column="MAIN_FILE" jdbcType="DATE" />	
				
		<!-- DOMAIN에만 존재 -->
		<result property="voteRemainDate" column="VOTE_REMAIN_DATE" jdbcType="NUMERIC" />
		<result property="voteRate" column="VOTE_RATE" jdbcType="NUMERIC" />	
		<result property="fundRate" column="FUND_RATE" jdbcType="NUMERIC" />			
		<result property="fundRemainDate" column="FUND_REMAIN_DATE" jdbcType="NUMERIC" />
		</resultMap>
		
		
  <!--/////////////// FUNDING 후원신청게시판 ////////////////////// -->
 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getPost"	parameterType="string"	resultMap="fundingSelectMap">
		SELECT
		POST_NO
		FROM STORYFUNDING 
		WHERE ID = #{value} AND VOTE_START_DATE  >=  SYSDATE-31
	 </select>
	   
	<!-- SQL : INSERT -->
	<insert 	id="addVoting"		parameterType="funding" >
		<selectKey keyProperty="postNo" resultType="int" order="BEFORE">
		SELECT SEQ_STORYFUNDING_POST_NO.NEXTVAL FROM DUAL
		</selectKey>
	 	INSERT
		INTO STORYFUNDING( POST_NO , ID , NICKNAME , STATUS_CODE , PHONE , POST_TITLE , POST_CONTENT , 
		VOTE_START_DATE , VOTE_END_DATE , FUND_TARGET_PAY , VOTE_TARGET_COUNT , FUND_TARGET_DAY , MAIN_FILE ) 
		VALUES	 ( #{postNo}, #{id:VARCHAR} , #{nickname:VARCHAR} , 1 , #{phone:VARCHAR} , #{postTitle:VARCHAR} , #{postContent} ,
		SYSDATE , SYSDATE+29 , #{fundTargetPay:NUMERIC} , #{voteTargetCount:NUMERIC} , #{fundTargetDay:NUMERIC} ,  #{mainFile} )
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getVoting"	parameterType="string"	resultMap="fundingSelectMap">
		SELECT
		POST_NO , ID , NICKNAME , STATUS_CODE ,  PHONE ,  POST_TITLE , POST_CONTENT , VOTE_VIEW_COUNT , VOTER_COUNT , VOTE_START_DATE ,
		VOTE_END_DATE , FUND_TARGET_PAY , VOTE_TARGET_COUNT , FUND_TARGET_DAY , FUND_VIEW_COUNT , SPONSOR_COUNT , FUND_PAY , FUND_START_DATE , FUND_END_DATE , MAIN_FILE , REVIEW_TITLE , REVIEW_CONTENT , REVIEW_REG_DATE ,  		
		TRUNC((VOTE_END_DATE)-(SYSDATE))+1 AS VOTE_REMAIN_DATE , (VOTER_COUNT / VOTE_TARGET_COUNT)*100 AS VOTE_RATE , TRUNC((FUND_END_DATE)-(SYSDATE))+1 AS FUND_REMAIN_DATE , (FUND_PAY / FUND_TARGET_PAY)*100 AS FUND_RATE
		FROM STORYFUNDING 
		WHERE POST_NO IN #{value}
	 </select>

	<!--  SQL : UPDATE--> 
	 <update	id="updateVoting"	parameterType="funding" >
	   	UPDATE STORYFUNDING
	   	<set>
			POST_TITLE	       = #{postTitle},
			POST_CONTENT 	   = #{postContent} ,
			FUND_TARGET_PAY	   = #{fundTargetPay},
			FUND_TARGET_DAY    = #{fundTargetDay},
			VOTE_TARGET_COUNT  = #{voteTargetCount},
			FUND_END_DATE      = SYSDATE+31+#{fundTargetDay},
			MAIN_FILE          = #{mainFile}
	   	</set>
	   	WHERE POST_NO IN #{postNo} 
	 </update>
	
	 
	 <!-- SQL : DELETE -->
	<delete id="delVoting" parameterType="string">
		UPDATE STORYFUNDING
		SET
		STATUS_CODE = '0'
		WHERE POST_NO = #{value}
	</delete>	
		 	 
	<!-- 	 SQL : SELECT LIST-->
	<select  id="listVoting"  parameterType="search"	resultMap="fundingSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT
													POST_NO , ID , NICKNAME , STATUS_CODE ,  PHONE ,  POST_TITLE  , VOTE_VIEW_COUNT , VOTER_COUNT , VOTE_START_DATE ,
													VOTE_END_DATE , FUND_TARGET_PAY , VOTE_TARGET_COUNT , FUND_TARGET_DAY , FUND_VIEW_COUNT , SPONSOR_COUNT , FUND_PAY , FUND_START_DATE , FUND_END_DATE , MAIN_FILE ,				
											        TRUNC((VOTE_END_DATE)-(SYSDATE))+1 AS VOTE_REMAIN_DATE , (VOTER_COUNT / VOTE_TARGET_COUNT)*100 AS VOTE_RATE
											FROM STORYFUNDING 
									     <where>	     			
									           <if test="searchCondition != null">
													<if test="searchCondition == 0 and searchKeyword !='' ">
														POST_TITLE LIKE #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
												    	NICKNAME LIKE #{searchKeyword}
												    </if>
										        </if> 		    
												<if test="voteCondition != null">
													 <if test="voteCondition == 1 and voteCondition !='' ">
													    AND STATUS_CODE = 1 AND STATUS_CODE !=0
											         </if>
												     <if test="voteCondition == 2 and voteCondition !='' ">
													    AND STATUS_CODE IN (2,3,4)  AND STATUS_CODE !=0
													 </if>
												 </if>	
												<if test="voteCondition == null">	
														AND STATUS_CODE != 0
												</if>											 										
										    </where>
										    GROUP BY
												POST_NO , ID , NICKNAME , STATUS_CODE ,  PHONE ,  POST_TITLE , VOTE_VIEW_COUNT , VOTER_COUNT , VOTE_START_DATE ,
												VOTE_END_DATE , FUND_TARGET_PAY , VOTE_TARGET_COUNT , FUND_TARGET_DAY , FUND_VIEW_COUNT , SPONSOR_COUNT , FUND_PAY , FUND_START_DATE , FUND_END_DATE , MAIN_FILE , REVIEW_TITLE , REVIEW_CONTENT , REVIEW_REG_DATE 														
											ORDER BY CASE WHEN (STATUS_CODE != 1) THEN 'STATUS_CODE DESC' ELSE 'POST_NO DESC' END, POST_NO DESC				
										) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>

	  <!-- SQL : AUTOCOMPLETE -->
	 <select 	id="getAutoVoting"	parameterType="map"	resultType="string">
		SELECT DISTINCT
		${field}
		FROM STORYFUNDING 
		WHERE ${field} LIKE '%'||#{searchKeyword}||'%' 
		<if test="statusCode == 1">
		AND STATUS_CODE IN (3,4)
		</if>
	 </select>	 
	  
     <!-- SQL : SELECT ROW Count	--> 
	 <select  id="getVotingTotalCount"  parameterType="search" resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT
						POST_NO , ID , NICKNAME , STATUS_CODE ,  PHONE ,  POST_TITLE , POST_CONTENT , VOTE_VIEW_COUNT , VOTER_COUNT , VOTE_START_DATE ,
						VOTE_END_DATE , FUND_TARGET_PAY , VOTE_TARGET_COUNT , FUND_TARGET_DAY , FUND_VIEW_COUNT , SPONSOR_COUNT , FUND_PAY , FUND_START_DATE , FUND_END_DATE , MAIN_FILE ,
						TRUNC((VOTE_END_DATE)-(SYSDATE))+1 AS VOTE_REMAIN_DATE , (VOTER_COUNT / VOTE_TARGET_COUNT)*100 AS VOTE_RATE  		
						FROM STORYFUNDING 
									     <where>		     			
									           <if test="searchCondition != null">
													<if test="searchCondition == 0 and searchKeyword !='' ">
														POST_TITLE LIKE #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
												    	NICKNAME LIKE #{searchKeyword}
												    </if>
										        </if> 		    
												<if test="voteCondition != null">
													 <if test="voteCondition == 1 and voteCondition !='' ">
													    AND STATUS_CODE = 1 AND STATUS_CODE !=0
											         </if>
												     <if test="voteCondition == 2 and voteCondition !='' ">
													    AND STATUS_CODE IN (2,3,4)  AND STATUS_CODE !=0
													 </if>
												 </if>	
												<if test="voteCondition == null">	
														AND STATUS_CODE != 0
												</if>											 										
										    </where>
							) countTable						
	 </select>
	  <!--/////////////// FUNDING 후원게시게시판 ////////////////////// -->
	  
	<!-- 	 SQL : SELECT LIST-->
	<select  id="listFunding"  parameterType="search"	resultMap="fundingSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT
													POST_NO , ID , NICKNAME , STATUS_CODE ,  PHONE ,  POST_TITLE  , VOTE_VIEW_COUNT , VOTER_COUNT , VOTE_START_DATE ,
													VOTE_END_DATE , FUND_TARGET_PAY , VOTE_TARGET_COUNT , FUND_TARGET_DAY , FUND_VIEW_COUNT , SPONSOR_COUNT , FUND_PAY , FUND_START_DATE , FUND_END_DATE , MAIN_FILE ,				
											        TRUNC((FUND_END_DATE)-(SYSDATE))+1 AS FUND_REMAIN_DATE , (FUND_PAY / FUND_TARGET_PAY)*100 AS FUND_RATE
														FROM STORYFUNDING 
 	  									     <where>
  									           <if test="searchCondition != null">
													<if test="searchCondition == 0 and searchKeyword !='' ">
														POST_TITLE LIKE #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
												    	NICKNAME LIKE #{searchKeyword}
												    </if>
										        </if> 		  							          
												<if test="voteCondition != null">
													 <if test="voteCondition == 3 and voteCondition !='' ">
													    AND STATUS_CODE = 3 AND STATUS_CODE !=0
											         </if>
												     <if test="voteCondition == 4 and voteCondition !='' ">
													    AND STATUS_CODE = 4 AND STATUS_CODE !=0
													 </if>
												 </if>	 
												<if test="voteCondition == null">	
														AND STATUS_CODE != 0
												</if>		
												AND  STATUS_CODE IN (3,4)										
										    </where>
										    GROUP BY
												POST_NO , ID , NICKNAME , STATUS_CODE ,  PHONE ,  POST_TITLE  , VOTE_VIEW_COUNT , VOTER_COUNT , VOTE_START_DATE ,
												VOTE_END_DATE , FUND_TARGET_PAY , VOTE_TARGET_COUNT , FUND_TARGET_DAY , FUND_VIEW_COUNT , SPONSOR_COUNT , FUND_PAY , FUND_START_DATE , FUND_END_DATE , MAIN_FILE , REVIEW_TITLE , REVIEW_CONTENT , REVIEW_REG_DATE 														
											ORDER BY CASE WHEN (STATUS_CODE != 3) THEN 'STATUS_CODE DESC' ELSE 'POST_NO DESC' END, POST_NO DESC				
											) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>	  
	
	    <!-- SQL : SELECT ROW Count	--> 
	 <select  id="getFundingTotalCount"  parameterType="search" resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT
											POST_NO , ID , NICKNAME , STATUS_CODE ,  PHONE ,  POST_TITLE , POST_CONTENT , VOTE_VIEW_COUNT , VOTER_COUNT , VOTE_START_DATE ,
											VOTE_END_DATE , FUND_TARGET_PAY , VOTE_TARGET_COUNT , FUND_TARGET_DAY , FUND_VIEW_COUNT , SPONSOR_COUNT , FUND_PAY , FUND_START_DATE , FUND_END_DATE , MAIN_FILE ,
											TRUNC((FUND_END_DATE)-(SYSDATE))+1 AS FUND_REMAIN_DATE , (FUND_PAY / FUND_TARGET_PAY)*100 AS FUND_RATE
												FROM STORYFUNDING 
 	  									     <where>
  									           <if test="searchCondition != null">
													<if test="searchCondition == 0 and searchKeyword !='' ">
														POST_TITLE LIKE #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
												    	NICKNAME LIKE #{searchKeyword}
												    </if>
										        </if> 		  							          
												<if test="voteCondition != null">
													 <if test="voteCondition == 3 and voteCondition !='' ">
													    AND STATUS_CODE = 3 AND STATUS_CODE !=0
											         </if>
												     <if test="voteCondition == 4 and voteCondition !='' ">
													    AND STATUS_CODE = 4 AND STATUS_CODE !=0
													 </if>
												 </if>	 
												<if test="voteCondition == null">	
														AND STATUS_CODE != 0
												</if>		
												AND  STATUS_CODE IN (3,4)										
										    </where>
							) countTable						
	 </select>
	  <!--///////////////  참여로 인한 update ////////////////////// --> 
	   
			 <!--  SQL : UPDATE (Participate)--> 
			 <update	id="updateStatusCode"	parameterType="funding" >
			   	UPDATE STORYFUNDING
			   	<set>
					
					<if test="voterCount==1 || sponsorCount==1"   > 				   	
					STATUS_CODE        =      #{statusCode},
					VOTER_COUNT        =      VOTER_COUNT + #{voterCount},
			   		SPONSOR_COUNT      =      SPONSOR_COUNT + #{sponsorCount},
			   		FUND_PAY           =      FUND_PAY + #{fundPay},
			   		<if test="statusCode==3">
			   		FUND_START_DATE    =      SYSDATE + 1,
			   		FUND_END_DATE      =      SYSDATE + 1 + FUND_TARGET_DAY
					</if>
					</if>
					
					<if test="voteViewCount==1 || fundViewCount==1"   > 	
			   		VOTE_VIEW_COUNT    =      VOTE_VIEW_COUNT + #{voteViewCount},
			   		FUND_VIEW_COUNT    =      FUND_VIEW_COUNT + #{fundViewCount},
					</if>	  
					
	 		   	</set>
			   	WHERE POST_NO IN #{postNo} 
			 </update>
			 
			   <!--/////////////// 후기게시판 ////////////////////// -->
	 	 <!-- SQL : INSERT  -->
		 <update	id="addReview"	parameterType="funding" >
		   	UPDATE STORYFUNDING
		   	<set>
				REVIEW_TITLE	 = #{reviewTitle:VARCHAR},
				REVIEW_CONTENT 	 = #{reviewContent:VARCHAR},
				REVIEW_REG_DATE  = SYSDATE
		   	</set>
		   	WHERE POST_NO IN #{postNo} 
		 </update>
		 
		 <!-- SQL : SELECT ONE -->
		 <select 	id="getReview"	parameterType="string"	resultMap="fundingSelectMap">
			SELECT
			POST_NO , ID , NICKNAME , REVIEW_TITLE , REVIEW_CONTENT , REVIEW_REG_DATE , REVIEW_DEL_CODE
			FROM STORYFUNDING 
			WHERE POST_NO IN #{value}
		 </select>
		 
		 <!-- SQL :  UPDATE -->
		 <update	id="updateReview"	parameterType="funding" >
		   	UPDATE STORYFUNDING
		   	<set>
				REVIEW_TITLE	 = #{reviewTitle:VARCHAR},
				REVIEW_CONTENT 	 = #{reviewContent:VARCHAR}
		   	</set>
		   	WHERE POST_NO IN #{postNo} 
		 </update>
	
		<!-- SQL : DELETE -->		 
		<delete id="delReview" parameterType="string">
		   	UPDATE STORYFUNDING
		   	<set>
				REVIEW_TITLE	 = null,
				REVIEW_CONTENT 	 = null,
				REVIEW_REG_DATE  = null
		   	</set>
		   	WHERE POST_NO IN #{postNo} 
		</delete>		 
</mapper> 